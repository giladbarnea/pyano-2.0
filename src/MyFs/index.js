"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
console.log('MyFs.index.ts');
const fs = require("fs");
const util_1 = require("../util");
function mkdir(pathLike, options) {
    console.warn('MyFs.mkdir: should use vanilla mkdirSync.');
    return new Promise(resolve => fs.mkdir(pathLike, options, err => resolve(!util_1.bool(err))));
}
function path_exists(pathLike) {
    console.warn('MyFs.path_exists: should use vanilla existsSync.');
    return new Promise(resolve => fs.access(pathLike, fs.constants.F_OK, err => resolve(!util_1.bool(err))));
}
function replace_ext(pathLike, ext) {
    if (ext.startsWith('.'))
        ext = ext.slice(1);
    return `${remove_ext(pathLike)}.${ext}`;
}
function remove_ext(pathLike) {
    return path.join(path.dirname(pathLike), path.basename(pathLike, path.extname(pathLike)));
}
function push_before_ext(pathLike, push) {
    let ext = path.extname(pathLike);
    return `${remove_ext(pathLike)}${push}${ext}`;
}
function basename(pathLike, ext) {
    console.warn('MyFs.basename: this just wraps vanilla path.basename.');
    if (!ext)
        return path.basename(pathLike);
    return path.basename(pathLike, ext);
}
function remove(pathLike) {
    console.warn('MyFs.remove: this just wraps unlinkSync.');
    fs.unlinkSync(pathLike);
}
exports.default = { mkdir, path_exists, replace_ext, remove_ext, push_before_ext, basename, remove };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDN0IseUJBQXlCO0FBQ3pCLGtDQUErQjtBQUcvQixTQUFTLEtBQUssQ0FBQyxRQUFnQixFQUFFLE9BQWdEO0lBQzdFLE9BQU8sQ0FBQyxJQUFJLENBQUMsMkNBQTJDLENBQUMsQ0FBQztJQUMxRCxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQ3pCLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFdBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBR0QsU0FBUyxXQUFXLENBQUMsUUFBZ0I7SUFDakMsT0FBTyxDQUFDLElBQUksQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FDekIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxXQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUUsQ0FBQztBQUlELFNBQVMsV0FBVyxDQUFDLFFBQWdCLEVBQUUsR0FBVztJQUM5QyxJQUFLLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDO1FBQ3BCLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7QUFDNUMsQ0FBQztBQVNELFNBQVMsVUFBVSxDQUFDLFFBQWdCO0lBQ2hDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlGLENBQUM7QUFJRCxTQUFTLGVBQWUsQ0FBQyxRQUFnQixFQUFFLElBQXFCO0lBRTVELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7QUFDbEQsQ0FBQztBQUdELFNBQVMsUUFBUSxDQUFDLFFBQWdCLEVBQUUsR0FBWTtJQUM1QyxPQUFPLENBQUMsSUFBSSxDQUFDLHVEQUF1RCxDQUFDLENBQUM7SUFDdEUsSUFBSyxDQUFDLEdBQUc7UUFDTCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUN4QyxDQUFDO0FBR0QsU0FBUyxNQUFNLENBQUMsUUFBZ0I7SUFDNUIsT0FBTyxDQUFDLElBQUksQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO0lBQ3pELEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQUVELGtCQUFlLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZygnTXlGcy5pbmRleC50cycpO1xuaW1wb3J0ICogYXMgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgeyBib29sIH0gZnJvbSBcIi4uL3V0aWxcIjtcblxuXG5mdW5jdGlvbiBta2RpcihwYXRoTGlrZTogc3RyaW5nLCBvcHRpb25zOiB7IG1vZGU/OiBudW1iZXI7IHJlY3Vyc2l2ZT86IGJvb2xlYW47IH0pOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICBjb25zb2xlLndhcm4oJ015RnMubWtkaXI6IHNob3VsZCB1c2UgdmFuaWxsYSBta2RpclN5bmMuJyk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT5cbiAgICAgICAgZnMubWtkaXIocGF0aExpa2UsIG9wdGlvbnMsIGVyciA9PiByZXNvbHZlKCFib29sKGVycikpKSk7XG59XG5cblxuZnVuY3Rpb24gcGF0aF9leGlzdHMocGF0aExpa2U6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGNvbnNvbGUud2FybignTXlGcy5wYXRoX2V4aXN0czogc2hvdWxkIHVzZSB2YW5pbGxhIGV4aXN0c1N5bmMuJyk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT5cbiAgICAgICAgZnMuYWNjZXNzKHBhdGhMaWtlLCBmcy5jb25zdGFudHMuRl9PSywgZXJyID0+IHJlc29sdmUoIWJvb2woZXJyKSkpKTtcbn1cblxuXG4vKip7QGxpbmsgcmVtb3ZlX2V4dCBVc2VzIHJlbW92ZV9leHR9Ki9cbmZ1bmN0aW9uIHJlcGxhY2VfZXh0KHBhdGhMaWtlOiBzdHJpbmcsIGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAoIGV4dC5zdGFydHNXaXRoKCcuJykgKVxuICAgICAgICBleHQgPSBleHQuc2xpY2UoMSk7XG4gICAgcmV0dXJuIGAke3JlbW92ZV9leHQocGF0aExpa2UpfS4ke2V4dH1gO1xufVxuXG5cbi8qKlxuICogQGV4YW1wbGVcbiAqIHJlbW92ZV9leHQoXCJleHBlcmltZW50cy90cnV0aHMvZnVyX2VsaXNlX0IudHh0XCIpXG4gKiA+Pj4gZXhwZXJpbWVudHMvdHJ1dGhzL2Z1cl9lbGlzZV9CXG4gKiByZW1vdmVfZXh0KFwiZnVyX2VsaXNlX0IudHh0XCIpXG4gKiA+Pj4gZnVyX2VsaXNlX0IgKi9cbmZ1bmN0aW9uIHJlbW92ZV9leHQocGF0aExpa2U6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHBhdGguam9pbihwYXRoLmRpcm5hbWUocGF0aExpa2UpLCBwYXRoLmJhc2VuYW1lKHBhdGhMaWtlLCBwYXRoLmV4dG5hbWUocGF0aExpa2UpKSk7XG59XG5cblxuLyoqe0BsaW5rIHJlbW92ZV9leHQgVXNlcyByZW1vdmVfZXh0fSAqL1xuZnVuY3Rpb24gcHVzaF9iZWZvcmVfZXh0KHBhdGhMaWtlOiBzdHJpbmcsIHB1c2g6IHN0cmluZyB8IG51bWJlcik6IHN0cmluZyB7XG4gICAgLy8gc2FmZSBiZWNhdXNlIHBhdGguZXh0bmFtZSByZXR1cm5zICcnIGlmIG5vIGV4dFxuICAgIGxldCBleHQgPSBwYXRoLmV4dG5hbWUocGF0aExpa2UpO1xuICAgIHJldHVybiBgJHtyZW1vdmVfZXh0KHBhdGhMaWtlKX0ke3B1c2h9JHtleHR9YDtcbn1cblxuXG5mdW5jdGlvbiBiYXNlbmFtZShwYXRoTGlrZTogc3RyaW5nLCBleHQ/OiBzdHJpbmcpIHtcbiAgICBjb25zb2xlLndhcm4oJ015RnMuYmFzZW5hbWU6IHRoaXMganVzdCB3cmFwcyB2YW5pbGxhIHBhdGguYmFzZW5hbWUuJyk7XG4gICAgaWYgKCAhZXh0IClcbiAgICAgICAgcmV0dXJuIHBhdGguYmFzZW5hbWUocGF0aExpa2UpO1xuICAgIHJldHVybiBwYXRoLmJhc2VuYW1lKHBhdGhMaWtlLCBleHQpO1xufVxuXG5cbmZ1bmN0aW9uIHJlbW92ZShwYXRoTGlrZTogc3RyaW5nKSB7XG4gICAgY29uc29sZS53YXJuKCdNeUZzLnJlbW92ZTogdGhpcyBqdXN0IHdyYXBzIHVubGlua1N5bmMuJyk7XG4gICAgZnMudW5saW5rU3luYyhwYXRoTGlrZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHsgbWtkaXIsIHBhdGhfZXhpc3RzLCByZXBsYWNlX2V4dCwgcmVtb3ZlX2V4dCwgcHVzaF9iZWZvcmVfZXh0LCBiYXNlbmFtZSwgcmVtb3ZlIH1cbiJdfQ==