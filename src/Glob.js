"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
console.group('Glob.ts');
const bhe_1 = require("./bhe");
const MyStore_1 = require("./MyStore");
const util_1 = require("./util");
const path = require("path");
const BigConfig = new MyStore_1.BigConfigCls(true);
let skipFade = false;
const MainContent = bhe_1.elem({ id: 'main_content' });
const Sidebar = bhe_1.elem({ id: 'sidebar' });
const Title = bhe_1.elem({ id: 'title' });
function getTruthFilesWhere({ extension } = { extension: undefined }) {
    if (extension) {
        if (extension.startsWith('.'))
            extension = extension.slice(1);
        if (!['txt', 'mid', 'mp4'].includes(extension)) {
            console.warn(`truthFilesList("${extension}"), must be either ['txt','mid','mp4'] or not at all. setting to undefined`);
            extension = undefined;
        }
    }
    let truthFiles = [...new Set(fs.readdirSync(TRUTHS_PATH_ABS))];
    if (util_1.bool(extension))
        return truthFiles.filter(f => path.extname(f) === `.${extension}`);
    return truthFiles;
}
console.groupEnd();
exports.default = { skipFade, MainContent, Sidebar, Title, BigConfig, getTruthFilesWhere };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2xvYi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkdsb2IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5QkFBeUI7QUFHekIsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN6QiwrQkFBNkI7QUFDN0IsdUNBQXlDO0FBQ3pDLGlDQUE4QjtBQUM5Qiw2QkFBNkI7QUFFN0IsTUFBTSxTQUFTLEdBQUcsSUFBSSxzQkFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pDLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQztBQUNyQixNQUFNLFdBQVcsR0FBRyxVQUFJLENBQUMsRUFBRSxFQUFFLEVBQUcsY0FBYyxFQUFFLENBQUMsQ0FBQztBQUNsRCxNQUFNLE9BQU8sR0FBRyxVQUFJLENBQUMsRUFBRSxFQUFFLEVBQUcsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUN6QyxNQUFNLEtBQUssR0FBRyxVQUFJLENBQUMsRUFBRSxFQUFFLEVBQUcsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUNyQyxTQUFTLGtCQUFrQixDQUFDLEVBQUMsU0FBUyxLQUF3QixFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUM7SUFDM0UsSUFBSyxTQUFTLEVBQUc7UUFDYixJQUFLLFNBQVMsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDO1lBQzFCLFNBQVMsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLElBQUssQ0FBQyxDQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFHO1lBQ2hELE9BQU8sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLFNBQVMsNEVBQTRFLENBQUMsQ0FBQztZQUN2SCxTQUFTLEdBQUcsU0FBUyxDQUFDO1NBQ3pCO0tBQ0o7SUFJRCxJQUFJLFVBQVUsR0FBRyxDQUFFLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFFLENBQUM7SUFDakUsSUFBSyxXQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2hCLE9BQU8sVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZFLE9BQU8sVUFBVSxDQUFDO0FBQ3RCLENBQUM7QUFDTCxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDbkIsa0JBQWUsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFDLGtCQUFrQixFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIjtcblxuLyoqaW1wb3J0IEdsb2IgZnJvbSAnLi9HbG9iJyovXG5jb25zb2xlLmdyb3VwKCdHbG9iLnRzJyk7XG5pbXBvcnQgeyBlbGVtIH0gZnJvbSBcIi4vYmhlXCI7XG5pbXBvcnQgeyBCaWdDb25maWdDbHMgfSBmcm9tIFwiLi9NeVN0b3JlXCI7XG5pbXBvcnQgeyBib29sIH0gZnJvbSBcIi4vdXRpbFwiO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tIFwicGF0aFwiO1xuXG5jb25zdCBCaWdDb25maWcgPSBuZXcgQmlnQ29uZmlnQ2xzKHRydWUpO1xubGV0IHNraXBGYWRlID0gZmFsc2U7XG5jb25zdCBNYWluQ29udGVudCA9IGVsZW0oeyBpZCA6ICdtYWluX2NvbnRlbnQnIH0pO1xuY29uc3QgU2lkZWJhciA9IGVsZW0oeyBpZCA6ICdzaWRlYmFyJyB9KTtcbmNvbnN0IFRpdGxlID0gZWxlbSh7IGlkIDogJ3RpdGxlJyB9KTtcbmZ1bmN0aW9uIGdldFRydXRoRmlsZXNXaGVyZSh7ZXh0ZW5zaW9ufTp7ZXh0ZW5zaW9uPzpzdHJpbmd9ID0ge2V4dGVuc2lvbjp1bmRlZmluZWR9KTogc3RyaW5nW10ge1xuICAgICAgICBpZiAoIGV4dGVuc2lvbiApIHtcbiAgICAgICAgICAgIGlmICggZXh0ZW5zaW9uLnN0YXJ0c1dpdGgoJy4nKSApXG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uID0gZXh0ZW5zaW9uLnNsaWNlKDEpO1xuICAgICAgICAgICAgaWYgKCAhWyAndHh0JywgJ21pZCcsICdtcDQnIF0uaW5jbHVkZXMoZXh0ZW5zaW9uKSApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYHRydXRoRmlsZXNMaXN0KFwiJHtleHRlbnNpb259XCIpLCBtdXN0IGJlIGVpdGhlciBbJ3R4dCcsJ21pZCcsJ21wNCddIG9yIG5vdCBhdCBhbGwuIHNldHRpbmcgdG8gdW5kZWZpbmVkYCk7XG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBjb25zdCB0cnV0aHNEaXJQYXRoID0gdGhpcy50cnV0aHNEaXJQYXRoKCk7XG4gICAgICAgIFxuICAgICAgICBsZXQgdHJ1dGhGaWxlcyA9IFsgLi4ubmV3IFNldChmcy5yZWFkZGlyU3luYyhUUlVUSFNfUEFUSF9BQlMpKSBdO1xuICAgICAgICBpZiAoIGJvb2woZXh0ZW5zaW9uKSApXG4gICAgICAgICAgICByZXR1cm4gdHJ1dGhGaWxlcy5maWx0ZXIoZiA9PiBwYXRoLmV4dG5hbWUoZikgPT09IGAuJHtleHRlbnNpb259YCk7XG4gICAgICAgIHJldHVybiB0cnV0aEZpbGVzO1xuICAgIH1cbmNvbnNvbGUuZ3JvdXBFbmQoKTtcbmV4cG9ydCBkZWZhdWx0IHsgc2tpcEZhZGUsIE1haW5Db250ZW50LCBTaWRlYmFyLCBUaXRsZSwgQmlnQ29uZmlnLGdldFRydXRoRmlsZXNXaGVyZSB9XG4iXX0=