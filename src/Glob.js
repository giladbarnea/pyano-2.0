"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bhe_1 = require("./bhe");
const MyStore_1 = require("./MyStore");
const MyAlert_1 = require("./MyAlert");
const util = require("./util");
console.group('Glob.ts');
const BigConfig = new MyStore_1.BigConfigCls(true);
let skipFade = false;
const MainContent = bhe_1.elem({ id: 'main_content' });
const Sidebar = bhe_1.visualbhe({ id: 'sidebar' });
const Title = bhe_1.visualbhe({ id: 'title' });
const Document = bhe_1.elem({ htmlElement: document });
const NavigationButtons = bhe_1.visualbhe({
    id: 'navigation_buttons', children: {
        exit: '.exit',
        minimize: '.minimize',
    }
});
NavigationButtons.exit.click(async () => {
    let { value: shouldExit } = await MyAlert_1.default.big.warning({
        title: 'Are you sure you want to exit?',
        confirmButtonColor: '#dc3545',
    });
    if (shouldExit)
        util.getCurrentWindow().close();
});
NavigationButtons.minimize.click(() => util.getCurrentWindow().minimize());
async function hide(...args) {
    const promises = [];
    for (let a of args) {
        switch (a) {
            case "Title":
                promises.push(Title.hide());
                break;
            case "NavigationButtons":
                promises.push(NavigationButtons.hide());
                break;
            case "Sidebar":
                promises.push(Sidebar.hide());
                break;
        }
    }
    return await Promise.all(promises);
}
console.groupEnd();
exports.default = { skipFade, MainContent, Sidebar, Title, BigConfig, Document, NavigationButtons, hide };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2xvYi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkdsb2IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBc0U7QUFDdEUsdUNBQXlDO0FBQ3pDLHVDQUFnQztBQUNoQywrQkFBK0I7QUFHL0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUV6QixNQUFNLFNBQVMsR0FBRyxJQUFJLHNCQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLE1BQU0sV0FBVyxHQUFHLFVBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0FBQ2xELE1BQU0sT0FBTyxHQUFHLGVBQVMsQ0FBQyxFQUFFLEVBQUUsRUFBRyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0FBQzlDLE1BQU0sS0FBSyxHQUFHLGVBQVMsQ0FBQyxFQUFFLEVBQUUsRUFBRyxPQUFPLEVBQUUsQ0FBMEMsQ0FBQztBQUVuRixNQUFNLFFBQVEsR0FBRyxVQUFJLENBQUMsRUFBRSxXQUFXLEVBQUcsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUNsRCxNQUFNLGlCQUFpQixHQUFHLGVBQVMsQ0FBQztJQUNoQyxFQUFFLEVBQUcsb0JBQW9CLEVBQUUsUUFBUSxFQUFHO1FBQ2xDLElBQUksRUFBRyxPQUFPO1FBQ2QsUUFBUSxFQUFHLFdBQVc7S0FFekI7Q0FDSixDQUF5RSxDQUFDO0FBQzNFLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEVBQUU7SUFDcEMsSUFBSSxFQUFFLEtBQUssRUFBRyxVQUFVLEVBQUUsR0FBRyxNQUFNLGlCQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQztRQUNuRCxLQUFLLEVBQUcsZ0NBQWdDO1FBQ3hDLGtCQUFrQixFQUFHLFNBQVM7S0FDakMsQ0FBQyxDQUFDO0lBQ0gsSUFBSyxVQUFVO1FBQ1gsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDeEMsQ0FBQyxDQUFDLENBQUM7QUFDSCxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFFM0UsS0FBSyxVQUFVLElBQUksQ0FBQyxHQUFHLElBQW1EO0lBQ3RFLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNwQixLQUFNLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRztRQUNsQixRQUFTLENBQUMsRUFBRztZQUNULEtBQUssT0FBTztnQkFDUixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUM1QixNQUFNO1lBQ1YsS0FBSyxtQkFBbUI7Z0JBQ3BCLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztnQkFDeEMsTUFBTTtZQUNWLEtBQUssU0FBUztnQkFDVixRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUM5QixNQUFNO1NBQ2I7S0FDSjtJQUNELE9BQU8sTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3ZDLENBQUM7QUFFRCxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDbkIsa0JBQWUsRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJldHRlckhUTUxFbGVtZW50LCBlbGVtLCBWaXN1YWxCSEUsIHZpc3VhbGJoZSB9IGZyb20gXCIuL2JoZVwiO1xuaW1wb3J0IHsgQmlnQ29uZmlnQ2xzIH0gZnJvbSBcIi4vTXlTdG9yZVwiO1xuaW1wb3J0IE15QWxlcnQgZnJvbSBcIi4vTXlBbGVydFwiO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tIFwiLi91dGlsXCI7XG5cbi8qKmltcG9ydCBHbG9iIGZyb20gJy4vR2xvYicqL1xuY29uc29sZS5ncm91cCgnR2xvYi50cycpO1xuXG5jb25zdCBCaWdDb25maWcgPSBuZXcgQmlnQ29uZmlnQ2xzKHRydWUpO1xubGV0IHNraXBGYWRlID0gZmFsc2U7XG5jb25zdCBNYWluQ29udGVudCA9IGVsZW0oeyBpZCA6ICdtYWluX2NvbnRlbnQnIH0pO1xuY29uc3QgU2lkZWJhciA9IHZpc3VhbGJoZSh7IGlkIDogJ3NpZGViYXInIH0pO1xuY29uc3QgVGl0bGUgPSB2aXN1YWxiaGUoeyBpZCA6ICd0aXRsZScgfSkgYXMgVmlzdWFsQkhFICYgeyBoMzogQmV0dGVySFRNTEVsZW1lbnQgfTtcbi8vIEB0cy1pZ25vcmVcbmNvbnN0IERvY3VtZW50ID0gZWxlbSh7IGh0bWxFbGVtZW50IDogZG9jdW1lbnQgfSk7XG5jb25zdCBOYXZpZ2F0aW9uQnV0dG9ucyA9IHZpc3VhbGJoZSh7XG4gICAgaWQgOiAnbmF2aWdhdGlvbl9idXR0b25zJywgY2hpbGRyZW4gOiB7XG4gICAgICAgIGV4aXQgOiAnLmV4aXQnLFxuICAgICAgICBtaW5pbWl6ZSA6ICcubWluaW1pemUnLFxuICAgICAgICBcbiAgICB9XG59KSBhcyBWaXN1YWxCSEUgJiB7IGV4aXQ6IEJldHRlckhUTUxFbGVtZW50LCBtaW5pbWl6ZTogQmV0dGVySFRNTEVsZW1lbnQgfTtcbk5hdmlnYXRpb25CdXR0b25zLmV4aXQuY2xpY2soYXN5bmMgKCkgPT4ge1xuICAgIGxldCB7IHZhbHVlIDogc2hvdWxkRXhpdCB9ID0gYXdhaXQgTXlBbGVydC5iaWcud2FybmluZyh7XG4gICAgICAgIHRpdGxlIDogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBleGl0PycsXG4gICAgICAgIGNvbmZpcm1CdXR0b25Db2xvciA6ICcjZGMzNTQ1JyxcbiAgICB9KTtcbiAgICBpZiAoIHNob3VsZEV4aXQgKVxuICAgICAgICB1dGlsLmdldEN1cnJlbnRXaW5kb3coKS5jbG9zZSgpO1xufSk7XG5OYXZpZ2F0aW9uQnV0dG9ucy5taW5pbWl6ZS5jbGljaygoKSA9PiB1dGlsLmdldEN1cnJlbnRXaW5kb3coKS5taW5pbWl6ZSgpKTtcblxuYXN5bmMgZnVuY3Rpb24gaGlkZSguLi5hcmdzOiAoXCJUaXRsZVwiIHwgXCJOYXZpZ2F0aW9uQnV0dG9uc1wiIHwgXCJTaWRlYmFyXCIpW10pOiBQcm9taXNlPHVua25vd25bXT4ge1xuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgZm9yICggbGV0IGEgb2YgYXJncyApIHtcbiAgICAgICAgc3dpdGNoICggYSApIHtcbiAgICAgICAgICAgIGNhc2UgXCJUaXRsZVwiOlxuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2goVGl0bGUuaGlkZSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJOYXZpZ2F0aW9uQnV0dG9uc1wiOlxuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2goTmF2aWdhdGlvbkJ1dHRvbnMuaGlkZSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJTaWRlYmFyXCI6XG4gICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChTaWRlYmFyLmhpZGUoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbn1cblxuY29uc29sZS5ncm91cEVuZCgpO1xuZXhwb3J0IGRlZmF1bHQgeyBza2lwRmFkZSwgTWFpbkNvbnRlbnQsIFNpZGViYXIsIFRpdGxlLCBCaWdDb25maWcsIERvY3VtZW50LCBOYXZpZ2F0aW9uQnV0dG9ucywgaGlkZSB9XG4iXX0=