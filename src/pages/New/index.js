"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Glob_1 = require("../../Glob");
const util = require("../../util");
const sidebar_1 = require("../sidebar");
const sections_1 = require("./sections");
const bhe_1 = require("../../bhe");
const MyAlert_1 = require("../../MyAlert");
async function load(reload) {
    Glob_1.default.BigConfig.last_page = "new";
    if (reload) {
        util.reloadPage();
    }
    sidebar_1.default.select("new", { changeTitle: true });
    const startButton = bhe_1.button({ cls: 'active', html: 'Start Experiment', id: 'start_experiment_button' })
        .click(async () => {
        let action = await MyAlert_1.default.big.twoButtons(`Please make sure that the loaded config, "${Glob_1.default.BigConfig.getSubconfig().name}", is fine.`, {
            confirmButtonText: `It's ok, start experiment`
        });
        console.log({ action });
    });
    Glob_1.default.MainContent.append(sections_1.default.settings, startButton);
}
exports.default = { load };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLHFDQUE4QjtBQUM5QixtQ0FBa0M7QUFDbEMsd0NBQWlDO0FBQ2pDLHlDQUFpQztBQUNqQyxtQ0FBbUM7QUFDbkMsMkNBQW1DO0FBRW5DLEtBQUssVUFBVSxJQUFJLENBQUMsTUFBZTtJQUUvQixjQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDakMsSUFBSyxNQUFNLEVBQUc7UUFDVixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7S0FDckI7SUFDRCxpQkFBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsRUFBRSxXQUFXLEVBQUcsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUM5QyxNQUFNLFdBQVcsR0FBRyxZQUFNLENBQUMsRUFBRSxHQUFHLEVBQUcsUUFBUSxFQUFFLElBQUksRUFBRyxrQkFBa0IsRUFBRSxFQUFFLEVBQUcseUJBQXlCLEVBQUUsQ0FBQztTQUNwRyxLQUFLLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFFZCxJQUFJLE1BQU0sR0FBRyxNQUFNLGlCQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyw2Q0FBNkMsY0FBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFJLGFBQWEsRUFBRTtZQUNwSSxpQkFBaUIsRUFBRywyQkFBMkI7U0FDbEQsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDNUIsQ0FBQyxDQUFDLENBQUM7SUFDUCxjQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FFbkIsa0JBQVEsQ0FBQyxRQUFRLEVBQ2pCLFdBQVcsQ0FFZCxDQUFDO0FBR04sQ0FBQztBQUVELGtCQUFlLEVBQUUsSUFBSSxFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAqICBwYWdlcy9OZXcvaW5kZXgudHNcbi8qKmltcG9ydCBuZXdQYWdlIGZyb20gXCIuL05ld1wiOyovXG5pbXBvcnQgR2xvYiBmcm9tIFwiLi4vLi4vR2xvYlwiO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi8uLi91dGlsJ1xuaW1wb3J0IHNpZGViYXIgZnJvbSBcIi4uL3NpZGViYXJcIjtcbmltcG9ydCBzZWN0aW9ucyBmcm9tIFwiLi9zZWN0aW9uc1wiXG5pbXBvcnQgeyBidXR0b24gfSBmcm9tIFwiLi4vLi4vYmhlXCI7XG5pbXBvcnQgTXlBbGVydCBmcm9tICcuLi8uLi9NeUFsZXJ0J1xuXG5hc3luYyBmdW5jdGlvbiBsb2FkKHJlbG9hZDogYm9vbGVhbikge1xuICAgIC8vIGNvbnN0IHsgZXhhbSwgdGVzdCB9ID0gR2xvYi5CaWdDb25maWc7XG4gICAgR2xvYi5CaWdDb25maWcubGFzdF9wYWdlID0gXCJuZXdcIjtcbiAgICBpZiAoIHJlbG9hZCApIHtcbiAgICAgICAgdXRpbC5yZWxvYWRQYWdlKCk7XG4gICAgfVxuICAgIHNpZGViYXIuc2VsZWN0KFwibmV3XCIsIHsgY2hhbmdlVGl0bGUgOiB0cnVlIH0pO1xuICAgIGNvbnN0IHN0YXJ0QnV0dG9uID0gYnV0dG9uKHsgY2xzIDogJ2FjdGl2ZScsIGh0bWwgOiAnU3RhcnQgRXhwZXJpbWVudCcsIGlkIDogJ3N0YXJ0X2V4cGVyaW1lbnRfYnV0dG9uJyB9KVxuICAgICAgICAuY2xpY2soYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gYXdhaXQgTXlBbGVydC5iaWcudHdvQnV0dG9ucyhgUGxlYXNlIG1ha2Ugc3VyZSB0aGF0IHRoZSBsb2FkZWQgY29uZmlnLCBcIiR7R2xvYi5CaWdDb25maWcuZ2V0U3ViY29uZmlnKCkubmFtZX1cIiwgaXMgZmluZS5gLCB7XG4gICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQgOiBgSXQncyBvaywgc3RhcnQgZXhwZXJpbWVudGBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coeyBhY3Rpb24gfSk7XG4gICAgICAgIH0pO1xuICAgIEdsb2IuTWFpbkNvbnRlbnQuYXBwZW5kKFxuICAgICAgICAvLyBzZWN0aW9ucy5sZXZlbHMsXG4gICAgICAgIHNlY3Rpb25zLnNldHRpbmdzLFxuICAgICAgICBzdGFydEJ1dHRvblxuICAgICAgICAvLyBHdWkuJHJlYWR5U2F2ZUxvYWRTYXZlYXMoKSxcbiAgICApO1xuICAgIFxuICAgIFxufVxuXG5leHBvcnQgZGVmYXVsdCB7IGxvYWQgfVxuIl19