"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bhe_1 = require("../../../bhe");
class LevelsDiv extends bhe_1.Div {
    constructor({ setid }) {
        super({ setid });
        this.cacheAppend({
            addLevelBtn: bhe_1.button({ cls: 'green', html: 'Add Level', click: () => this.addLevel }),
            removeLevelBtn: bhe_1.button({ cls: 'inactive', html: 'Remove Last Level', click: () => this.removeLevel() }),
            selectors: bhe_1.div(),
            subtitles: bhe_1.div({ cls: 'subtitle' }).cacheAppend({
                level: bhe_1.div({ text: 'LEVEL' }),
                notes: bhe_1.div({ text: 'NOTES' }),
                rhythm: bhe_1.div({ text: 'RHYTHM' }),
                tempo: bhe_1.div({ text: 'TEMPO' }),
                trials: bhe_1.div({ text: 'TEMPO' }),
            }),
        });
    }
    addLevel() {
    }
    removeLevel(index = -1) {
    }
}
exports.LevelsDiv = LevelsDiv;
const levelsDiv = new LevelsDiv({ setid: 'levels_div' });
exports.default = levelsDiv;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV2ZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibGV2ZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBSUEsc0NBQXdEO0FBRXhELE1BQWEsU0FBVSxTQUFRLFNBQUc7SUFNOUIsWUFBWSxFQUFFLEtBQUssRUFBRTtRQUNqQixLQUFLLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDYixXQUFXLEVBQUUsWUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDcEYsY0FBYyxFQUFFLFlBQU0sQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLG1CQUFtQixFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztZQUN2RyxTQUFTLEVBQUUsU0FBRyxFQUFFO1lBQ2hCLFNBQVMsRUFBRSxTQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUM7Z0JBQzVDLEtBQUssRUFBRSxTQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7Z0JBQzdCLEtBQUssRUFBRSxTQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7Z0JBQzdCLE1BQU0sRUFBRSxTQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7Z0JBQy9CLEtBQUssRUFBRSxTQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7Z0JBQzdCLE1BQU0sRUFBRSxTQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7YUFDakMsQ0FBQztTQUNMLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxRQUFRO0lBRVIsQ0FBQztJQUVPLFdBQVcsQ0FBQyxRQUFnQixDQUFDLENBQUM7SUFFdEMsQ0FBQztDQUVKO0FBOUJELDhCQThCQztBQUVELE1BQU0sU0FBUyxHQUFHLElBQUksU0FBUyxDQUFDLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7QUFHekQsa0JBQWUsU0FBUyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gKiAgcGFnZXMvTmV3L3NlY3Rpb25zL2xldmVsc1xuLyoqXG4gKiBpbXBvcnQgc2VjdGlvbnMgZnJvbSBcIi4vc2VjdGlvbnNcIlxuICogc2VjdGlvbnMubGV2ZWxzKi9cbmltcG9ydCB7IGJ1dHRvbiwgQnV0dG9uLCBEaXYsIGRpdiB9IGZyb20gXCIuLi8uLi8uLi9iaGVcIjtcblxuZXhwb3J0IGNsYXNzIExldmVsc0RpdiBleHRlbmRzIERpdiB7XG4gICAgYWRkTGV2ZWxCdG46IEJ1dHRvbjtcbiAgICByZW1vdmVMZXZlbEJ0bjogQnV0dG9uO1xuICAgIHNlbGVjdG9yczogRGl2O1xuICAgIHN1YnRpdGxlczogRGl2O1xuXG4gICAgY29uc3RydWN0b3IoeyBzZXRpZCB9KSB7XG4gICAgICAgIHN1cGVyKHsgc2V0aWQgfSk7XG4gICAgICAgIHRoaXMuY2FjaGVBcHBlbmQoe1xuICAgICAgICAgICAgYWRkTGV2ZWxCdG46IGJ1dHRvbih7IGNsczogJ2dyZWVuJywgaHRtbDogJ0FkZCBMZXZlbCcsIGNsaWNrOiAoKSA9PiB0aGlzLmFkZExldmVsIH0pLFxuICAgICAgICAgICAgcmVtb3ZlTGV2ZWxCdG46IGJ1dHRvbih7IGNsczogJ2luYWN0aXZlJywgaHRtbDogJ1JlbW92ZSBMYXN0IExldmVsJywgY2xpY2s6ICgpID0+IHRoaXMucmVtb3ZlTGV2ZWwoKSB9KSxcbiAgICAgICAgICAgIHNlbGVjdG9yczogZGl2KCksXG4gICAgICAgICAgICBzdWJ0aXRsZXM6IGRpdih7IGNsczogJ3N1YnRpdGxlJyB9KS5jYWNoZUFwcGVuZCh7XG4gICAgICAgICAgICAgICAgbGV2ZWw6IGRpdih7IHRleHQ6ICdMRVZFTCcgfSksXG4gICAgICAgICAgICAgICAgbm90ZXM6IGRpdih7IHRleHQ6ICdOT1RFUycgfSksXG4gICAgICAgICAgICAgICAgcmh5dGhtOiBkaXYoeyB0ZXh0OiAnUkhZVEhNJyB9KSxcbiAgICAgICAgICAgICAgICB0ZW1wbzogZGl2KHsgdGV4dDogJ1RFTVBPJyB9KSxcbiAgICAgICAgICAgICAgICB0cmlhbHM6IGRpdih7IHRleHQ6ICdURU1QTycgfSksXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBhZGRMZXZlbCgpIHtcblxuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlTGV2ZWwoaW5kZXg6IG51bWJlciA9IC0xKSB7XG5cbiAgICB9XG5cbn1cblxuY29uc3QgbGV2ZWxzRGl2ID0gbmV3IExldmVsc0Rpdih7IHNldGlkOiAnbGV2ZWxzX2RpdicgfSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgbGV2ZWxzRGl2O1xuXG5cbiJdfQ==