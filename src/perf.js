"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function mark(markName) {
    window.performance.mark(markName);
}
function measure(startMark, endMark) {
    window.performance.measure(`${startMark} -> ${endMark}`, startMark, endMark);
}
function measureMany(...startEndPairs) {
    for (let [start, end] of startEndPairs)
        measure(start, end);
}
function getMeasures(startMark, endMark) {
    const name = `${startMark} -> ${endMark}`;
    const measures = window.performance.getEntriesByName(name, 'measure');
    measures.avg = () => {
        let _durations = measures.map(m => m.duration);
        let _sum = _durations.reduce((a, b) => a + b);
        return _sum / _durations.length;
    };
    measures.name = name;
    return measures;
}
function getManyMeasures(...startEndPairs) {
    const manyMeasures = [];
    for (let [start, end] of startEndPairs)
        manyMeasures.push(getMeasures(start, end));
    return manyMeasures;
}
exports.default = { mark, measure, measureMany, getManyMeasures, getMeasures };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInBlcmYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFNQSxTQUFTLElBQUksQ0FBQyxRQUFnQjtJQUMxQixNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN0QyxDQUFDO0FBRUQsU0FBUyxPQUFPLENBQUMsU0FBaUIsRUFBRSxPQUFlO0lBQy9DLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsU0FBUyxPQUFPLE9BQU8sRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNqRixDQUFDO0FBRUQsU0FBUyxXQUFXLENBQUMsR0FBRyxhQUF5QjtJQUM3QyxLQUFNLElBQUksQ0FBRSxLQUFLLEVBQUUsR0FBRyxDQUFFLElBQUksYUFBYTtRQUNyQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRCxTQUFTLFdBQVcsQ0FBQyxTQUFpQixFQUFFLE9BQWU7SUFDbkQsTUFBTSxJQUFJLEdBQUcsR0FBRyxTQUFTLE9BQU8sT0FBTyxFQUFFLENBQUM7SUFDMUMsTUFBTSxRQUFRLEdBQTRCLE1BQU0sQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRy9GLFFBQVEsQ0FBQyxHQUFHLEdBQUcsR0FBRyxFQUFFO1FBQ2hCLElBQUksVUFBVSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0MsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM5QyxPQUFPLElBQUksR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBQ3BDLENBQUMsQ0FBQztJQUNGLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUM7QUFFRCxTQUFTLGVBQWUsQ0FBQyxHQUFHLGFBQXlCO0lBQ2pELE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQztJQUN4QixLQUFNLElBQUksQ0FBRSxLQUFLLEVBQUUsR0FBRyxDQUFFLElBQUksYUFBYTtRQUNyQyxZQUFZLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMvQyxPQUFPLFlBQVksQ0FBQztBQUN4QixDQUFDO0FBYUQsa0JBQWUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgRXhQZXJmb3JtYW5jZUVudHJ5TGlzdCBleHRlbmRzIFBlcmZvcm1hbmNlRW50cnlMaXN0IHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgXG4gICAgYXZnKCk6IG51bWJlcjtcbn1cblxuZnVuY3Rpb24gbWFyayhtYXJrTmFtZTogc3RyaW5nKSB7XG4gICAgd2luZG93LnBlcmZvcm1hbmNlLm1hcmsobWFya05hbWUpO1xufVxuXG5mdW5jdGlvbiBtZWFzdXJlKHN0YXJ0TWFyazogc3RyaW5nLCBlbmRNYXJrOiBzdHJpbmcpIHtcbiAgICB3aW5kb3cucGVyZm9ybWFuY2UubWVhc3VyZShgJHtzdGFydE1hcmt9IC0+ICR7ZW5kTWFya31gLCBzdGFydE1hcmssIGVuZE1hcmspO1xufVxuXG5mdW5jdGlvbiBtZWFzdXJlTWFueSguLi5zdGFydEVuZFBhaXJzOiBzdHJpbmdbXVtdKSB7XG4gICAgZm9yICggbGV0IFsgc3RhcnQsIGVuZCBdIG9mIHN0YXJ0RW5kUGFpcnMgKVxuICAgICAgICBtZWFzdXJlKHN0YXJ0LCBlbmQpO1xufVxuXG5mdW5jdGlvbiBnZXRNZWFzdXJlcyhzdGFydE1hcms6IHN0cmluZywgZW5kTWFyazogc3RyaW5nKTogRXhQZXJmb3JtYW5jZUVudHJ5TGlzdCB7XG4gICAgY29uc3QgbmFtZSA9IGAke3N0YXJ0TWFya30gLT4gJHtlbmRNYXJrfWA7XG4gICAgY29uc3QgbWVhc3VyZXMgPSA8RXhQZXJmb3JtYW5jZUVudHJ5TGlzdD4gd2luZG93LnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeU5hbWUobmFtZSwgJ21lYXN1cmUnKTtcbiAgICBcbiAgICBcbiAgICBtZWFzdXJlcy5hdmcgPSAoKSA9PiB7XG4gICAgICAgIGxldCBfZHVyYXRpb25zID0gbWVhc3VyZXMubWFwKG0gPT4gbS5kdXJhdGlvbik7XG4gICAgICAgIGxldCBfc3VtID0gX2R1cmF0aW9ucy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICAgICAgcmV0dXJuIF9zdW0gLyBfZHVyYXRpb25zLmxlbmd0aDtcbiAgICB9O1xuICAgIG1lYXN1cmVzLm5hbWUgPSBuYW1lO1xuICAgIHJldHVybiBtZWFzdXJlcztcbn1cblxuZnVuY3Rpb24gZ2V0TWFueU1lYXN1cmVzKC4uLnN0YXJ0RW5kUGFpcnM6IHN0cmluZ1tdW10pOiBFeFBlcmZvcm1hbmNlRW50cnlMaXN0W10ge1xuICAgIGNvbnN0IG1hbnlNZWFzdXJlcyA9IFtdO1xuICAgIGZvciAoIGxldCBbIHN0YXJ0LCBlbmQgXSBvZiBzdGFydEVuZFBhaXJzIClcbiAgICAgICAgbWFueU1lYXN1cmVzLnB1c2goZ2V0TWVhc3VyZXMoc3RhcnQsIGVuZCkpO1xuICAgIHJldHVybiBtYW55TWVhc3VyZXM7XG59XG5cbi8qKkBleGFtcGxlXG4gZm9yKC4uLikge1xuICAgcGVyZi5tYXJrKCdzdGFydCcpO1xuICAgLy8gZG8gc29tZXRoaW5nXG4gICBwZXJmLm1hcmsoJ2VuZCcpO1xuICAgcGVyZi5tZWFzdXJlKCdzdGFydCcsICdlbmQnKTtcbiB9XG4gY29uc3QgbWVhc3VyZXMgPSBwZXJmLmdldE1lYXN1cmVzKCdzdGFydCcsICdlbmQnKTtcbiBjb25zb2xlLmxvZyhtZWFzdXJlcy5uYW1lLCBtZWFzdXJlcy5hdmcoKSk7ICAgIC8vIHJlc3VsdHMgaW4gbXNcbiA+Pj4gc3RhcnQgLT4gZW5kIDQ4LjAxMjM0NTY3ODkxMDExMTI3XG4gKi9cbmV4cG9ydCBkZWZhdWx0IHsgbWFyaywgbWVhc3VyZSwgbWVhc3VyZU1hbnksIGdldE1hbnlNZWFzdXJlcywgZ2V0TWVhc3VyZXMgfVxuIl19