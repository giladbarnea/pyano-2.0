"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
console.group('init.ts');
const util_1 = require("./util");
const MyPyShell_1 = require("./MyPyShell");
const Pages = require("./pages");
const Glob_1 = require("./Glob");
console.log('after importing MyPyShell', MyPyShell_1.isDone());
util_1.waitUntil(MyPyShell_1.isDone).then(() => {
    console.group('init.ts MyPyShell done');
    Pages.sidebar.build();
    const last_page = Glob_1.default.Store.last_page;
    console.log('last_page:', last_page);
    Pages.toPage(last_page, false);
    console.groupEnd();
});
console.groupEnd();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImluaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3pCLGlDQUFtQztBQUduQywyQ0FBcUM7QUFFckMsaUNBQWlDO0FBQ2pDLGlDQUEwQjtBQUUxQixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixFQUFFLGtCQUFNLEVBQUUsQ0FBQyxDQUFDO0FBR25ELGdCQUFTLENBQUMsa0JBQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7SUFDeEIsT0FBTyxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3hDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFHdEIsTUFBTSxTQUFTLEdBQUcsY0FBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUM7SUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDckMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0IsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0FBT0gsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5ncm91cCgnaW5pdC50cycpO1xuaW1wb3J0IHsgd2FpdFVudGlsIH0gZnJvbSBcIi4vdXRpbFwiO1xuXG5cbmltcG9ydCB7IGlzRG9uZSB9IGZyb20gXCIuL015UHlTaGVsbFwiO1xuXG5pbXBvcnQgKiBhcyBQYWdlcyBmcm9tIFwiLi9wYWdlc1wiO1xuaW1wb3J0IEdsb2IgZnJvbSAnLi9HbG9iJztcblxuY29uc29sZS5sb2coJ2FmdGVyIGltcG9ydGluZyBNeVB5U2hlbGwnLCBpc0RvbmUoKSk7XG5cblxud2FpdFVudGlsKGlzRG9uZSkudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5ncm91cCgnaW5pdC50cyBNeVB5U2hlbGwgZG9uZScpO1xuICAgIFBhZ2VzLnNpZGViYXIuYnVpbGQoKTtcbiAgICAvLyBjb25zdCBHbG9iID0gcmVxdWlyZSgnR2xvYicpO1xuICAgIFxuICAgIGNvbnN0IGxhc3RfcGFnZSA9IEdsb2IuU3RvcmUubGFzdF9wYWdlO1xuICAgIGNvbnNvbGUubG9nKCdsYXN0X3BhZ2U6JywgbGFzdF9wYWdlKTtcbiAgICBQYWdlcy50b1BhZ2UobGFzdF9wYWdlLCBmYWxzZSk7XG4gICAgY29uc29sZS5ncm91cEVuZCgpO1xufSk7XG5cblxuLypcbiBcbiBcbiAvKiovXG5jb25zb2xlLmdyb3VwRW5kKCk7XG4vKlxuIGltcG9ydCB7IHJlbW90ZSB9IGZyb20gXCJlbGVjdHJvblwiO1xuIFxuIFxuIFxuIGltcG9ydCB7IEVTdG9yZSB9IGZyb20gXCJweWFub19sb2NhbF9tb2R1bGVzL2V4dF9saWJzXCI7XG4gXG4gXG4gZnVuY3Rpb24gbWF5YmVUb2dnbGVOb0N1cnNvcigpIHtcbiBjb25zdCBzaG91bGRUb2dnbGUgPSBFU3RvcmUubGFzdF9wYWdlID09IFwiaW5zaWRlX3Rlc3RcIjtcbiBjb25zb2xlLmxvZyhgUHJlc3NlZCBBbHQrQywgJHtzaG91bGRUb2dnbGUgPyAnJyA6ICdub3QgJ310b2dnbGluZyBub2N1cnNvcmApO1xuIGlmICggc2hvdWxkVG9nZ2xlIClcbiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbl9jb250ZW50JykuY2xhc3NMaXN0LnRvZ2dsZSgnbm9jdXJzb3InKTtcbiB9XG4gXG4gXG4gZnVuY3Rpb24gcmVsb2FkTWFpbldpbmRvdygpIHtcbiByZW1vdGUuZ2V0Q3VycmVudFdpbmRvdygpLnJlbG9hZCgpO1xuIH1cbiBcbiBcbiBmdW5jdGlvbiByZWxvYWRUb05ld1Rlc3QoKSB7XG4gY29uc29sZS5sb2coJ1ByZXNzZWQgY3RybCtxLCBzZXR0aW5nIGxhc3QgcGFnZSB0byBuZXcgdGVzdCBhbmQgcmVsb2FkaW5nJyk7XG4gRVN0b3JlLmxhc3RfcGFnZSA9ICduZXdfdGVzdCc7XG4gcmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKS5yZWxvYWQoKTtcbiB9XG4gXG4gXG4gZnVuY3Rpb24gb3BlbkRldlRvb2xzKCkge1xuIGNvbnNvbGUubG9nKCdQcmVzc2VkIGN0cmwreSwgb3BlbmluZyBEZXZUb29scycpO1xuIHJlbW90ZS5nZXRDdXJyZW50V2luZG93KCkud2ViQ29udGVudHMub3BlbkRldlRvb2xzKCk7XG4gfVxuIFxuIFxuIGZ1bmN0aW9uIHRvZ2dsZU1heGltaXplKCkge1xuIGNvbnNvbGUubG9nKCdQcmVzc2VkIGN0cmwrdSwgdG9nZ2xpbmcgbWF4aW1pemUnKTtcbiBjb25zdCBjdXJyZW50V2luZG93ID0gcmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKTtcbiBjdXJyZW50V2luZG93LnNldEZ1bGxTY3JlZW4oIWN1cnJlbnRXaW5kb3cuaXNGdWxsU2NyZWVuKCkpO1xuIGN1cnJlbnRXaW5kb3cuc2V0TWVudUJhclZpc2liaWxpdHkoY3VycmVudFdpbmRvdy5pc0Z1bGxTY3JlZW4oKSk7XG4gfVxuIFxuIHJlbW90ZS5nZXRDdXJyZW50V2luZG93KCkub24oXCJmb2N1c1wiLCAoKSA9PiB7XG4gcmVtb3RlLmdsb2JhbFNob3J0Y3V0LnJlZ2lzdGVyKCdBbHQrQycsIG1heWJlVG9nZ2xlTm9DdXJzb3IpO1xuIHJlbW90ZS5nbG9iYWxTaG9ydGN1dC5yZWdpc3RlcignQ29tbWFuZE9yQ29udHJvbCtSJywgcmVsb2FkTWFpbldpbmRvdyk7XG4gcmVtb3RlLmdsb2JhbFNob3J0Y3V0LnJlZ2lzdGVyKCdDb21tYW5kT3JDb250cm9sK1EnLCByZWxvYWRUb05ld1Rlc3QpO1xuIHJlbW90ZS5nbG9iYWxTaG9ydGN1dC5yZWdpc3RlcignQ29tbWFuZE9yQ29udHJvbCtZJywgb3BlbkRldlRvb2xzKTtcbiByZW1vdGUuZ2xvYmFsU2hvcnRjdXQucmVnaXN0ZXIoJ0NvbW1hbmRPckNvbnRyb2wrVScsIHRvZ2dsZU1heGltaXplKTtcbiB9KTtcbiByZW1vdGUuZ2V0Q3VycmVudFdpbmRvdygpLm9uKCdibHVyJywgKCkgPT4gcmVtb3RlLmdsb2JhbFNob3J0Y3V0LnVucmVnaXN0ZXJBbGwoKSk7XG4gXG4gXG4gY29uc3Qgc2lkZWJhciA9IHJlcXVpcmUoXCJweWFub19sb2NhbF9tb2R1bGVzL3NpZGViYXJcIik7XG4gc2lkZWJhci5idWlsZCgpO1xuIGNvbnN0IFBhZ2VzID0gcmVxdWlyZShcInB5YW5vX2xvY2FsX21vZHVsZXMvcGFnZXMvcGFnZXNcIik7XG4gXG4gY29uc3QgbGFzdF9wYWdlID0gRVN0b3JlLmxhc3RfcGFnZTtcbiBjb25zb2xlLmxvZygnaW5pdC5qcycsIHsgbGFzdF9wYWdlIH0pO1xuIFBhZ2VzLnRvUGFnZShsYXN0X3BhZ2UsIGZhbHNlKTtcbiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZXhpdF9idG4nKVxuIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcbiBsZXQgeyB2YWx1ZSA6IHNob3VsZEV4aXQgfSA9IGF3YWl0IEFsZXJ0LmJpZy53YXJuaW5nKHtcbiB0aXRsZSA6ICdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZXhpdD8nLFxuIGNvbmZpcm1CdXR0b25Db2xvciA6ICcjZGMzNTQ1JyxcbiBhbmltYXRpb24gOiBmYWxzZVxuIH0pO1xuIGlmICggc2hvdWxkRXhpdCApXG4gZ2V0Q3VycmVudFdpbmRvdygpLmNsb3NlKCk7XG4gfSk7XG4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21pbmltaXplX2J0bicpXG4gLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gZ2V0Q3VycmVudFdpbmRvdygpLm1pbmltaXplKCkpO1xuICovXG4iXX0=