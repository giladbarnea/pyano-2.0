"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
console.group('init.ts');
const util_1 = require("./util");
const MyPyShell_1 = require("./MyPyShell");
console.log('after importing MyPyShell', MyPyShell_1.isDone());
util_1.waitUntil(MyPyShell_1.isDone).then(() => {
    console.log('MyPyShell done');
});
console.groupEnd();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImluaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3pCLGlDQUFtQztBQUVuQywyQ0FBcUM7QUFFckMsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsRUFBRSxrQkFBTSxFQUFFLENBQUMsQ0FBQztBQUNuRCxnQkFBUyxDQUFDLGtCQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO0lBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUNsQyxDQUFDLENBQUMsQ0FBQztBQVNILE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUuZ3JvdXAoJ2luaXQudHMnKTtcbmltcG9ydCB7IHdhaXRVbnRpbCB9IGZyb20gXCIuL3V0aWxcIjtcblxuaW1wb3J0IHsgaXNEb25lIH0gZnJvbSBcIi4vTXlQeVNoZWxsXCI7XG5cbmNvbnNvbGUubG9nKCdhZnRlciBpbXBvcnRpbmcgTXlQeVNoZWxsJywgaXNEb25lKCkpO1xud2FpdFVudGlsKGlzRG9uZSkudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ015UHlTaGVsbCBkb25lJyk7XG59KTtcbi8qaW1wb3J0IEdsb2IgZnJvbSBcIi4vR2xvYlwiO1xuIFxuIGltcG9ydCAqIGFzIFBhZ2VzIGZyb20gXCIuL3BhZ2VzXCI7XG4gXG4gUGFnZXMuc2lkZWJhci5idWlsZCgpO1xuIGNvbnN0IGxhc3RfcGFnZSA9IEdsb2IuU3RvcmUubGFzdF9wYWdlO1xuIGNvbnNvbGUubG9nKCdsYXN0X3BhZ2U6JywgbGFzdF9wYWdlKTtcbiBQYWdlcy50b1BhZ2UobGFzdF9wYWdlLCBmYWxzZSk7Ki9cbmNvbnNvbGUuZ3JvdXBFbmQoKTtcbi8qXG4gaW1wb3J0IHsgcmVtb3RlIH0gZnJvbSBcImVsZWN0cm9uXCI7XG4gXG4gXG4gXG4gaW1wb3J0IHsgRVN0b3JlIH0gZnJvbSBcInB5YW5vX2xvY2FsX21vZHVsZXMvZXh0X2xpYnNcIjtcbiBcbiBcbiBmdW5jdGlvbiBtYXliZVRvZ2dsZU5vQ3Vyc29yKCkge1xuIGNvbnN0IHNob3VsZFRvZ2dsZSA9IEVTdG9yZS5sYXN0X3BhZ2UgPT0gXCJpbnNpZGVfdGVzdFwiO1xuIGNvbnNvbGUubG9nKGBQcmVzc2VkIEFsdCtDLCAke3Nob3VsZFRvZ2dsZSA/ICcnIDogJ25vdCAnfXRvZ2dsaW5nIG5vY3Vyc29yYCk7XG4gaWYgKCBzaG91bGRUb2dnbGUgKVxuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluX2NvbnRlbnQnKS5jbGFzc0xpc3QudG9nZ2xlKCdub2N1cnNvcicpO1xuIH1cbiBcbiBcbiBmdW5jdGlvbiByZWxvYWRNYWluV2luZG93KCkge1xuIHJlbW90ZS5nZXRDdXJyZW50V2luZG93KCkucmVsb2FkKCk7XG4gfVxuIFxuIFxuIGZ1bmN0aW9uIHJlbG9hZFRvTmV3VGVzdCgpIHtcbiBjb25zb2xlLmxvZygnUHJlc3NlZCBjdHJsK3EsIHNldHRpbmcgbGFzdCBwYWdlIHRvIG5ldyB0ZXN0IGFuZCByZWxvYWRpbmcnKTtcbiBFU3RvcmUubGFzdF9wYWdlID0gJ25ld190ZXN0JztcbiByZW1vdGUuZ2V0Q3VycmVudFdpbmRvdygpLnJlbG9hZCgpO1xuIH1cbiBcbiBcbiBmdW5jdGlvbiBvcGVuRGV2VG9vbHMoKSB7XG4gY29uc29sZS5sb2coJ1ByZXNzZWQgY3RybCt5LCBvcGVuaW5nIERldlRvb2xzJyk7XG4gcmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKS53ZWJDb250ZW50cy5vcGVuRGV2VG9vbHMoKTtcbiB9XG4gXG4gXG4gZnVuY3Rpb24gdG9nZ2xlTWF4aW1pemUoKSB7XG4gY29uc29sZS5sb2coJ1ByZXNzZWQgY3RybCt1LCB0b2dnbGluZyBtYXhpbWl6ZScpO1xuIGNvbnN0IGN1cnJlbnRXaW5kb3cgPSByZW1vdGUuZ2V0Q3VycmVudFdpbmRvdygpO1xuIGN1cnJlbnRXaW5kb3cuc2V0RnVsbFNjcmVlbighY3VycmVudFdpbmRvdy5pc0Z1bGxTY3JlZW4oKSk7XG4gY3VycmVudFdpbmRvdy5zZXRNZW51QmFyVmlzaWJpbGl0eShjdXJyZW50V2luZG93LmlzRnVsbFNjcmVlbigpKTtcbiB9XG4gXG4gcmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKS5vbihcImZvY3VzXCIsICgpID0+IHtcbiByZW1vdGUuZ2xvYmFsU2hvcnRjdXQucmVnaXN0ZXIoJ0FsdCtDJywgbWF5YmVUb2dnbGVOb0N1cnNvcik7XG4gcmVtb3RlLmdsb2JhbFNob3J0Y3V0LnJlZ2lzdGVyKCdDb21tYW5kT3JDb250cm9sK1InLCByZWxvYWRNYWluV2luZG93KTtcbiByZW1vdGUuZ2xvYmFsU2hvcnRjdXQucmVnaXN0ZXIoJ0NvbW1hbmRPckNvbnRyb2wrUScsIHJlbG9hZFRvTmV3VGVzdCk7XG4gcmVtb3RlLmdsb2JhbFNob3J0Y3V0LnJlZ2lzdGVyKCdDb21tYW5kT3JDb250cm9sK1knLCBvcGVuRGV2VG9vbHMpO1xuIHJlbW90ZS5nbG9iYWxTaG9ydGN1dC5yZWdpc3RlcignQ29tbWFuZE9yQ29udHJvbCtVJywgdG9nZ2xlTWF4aW1pemUpO1xuIH0pO1xuIHJlbW90ZS5nZXRDdXJyZW50V2luZG93KCkub24oJ2JsdXInLCAoKSA9PiByZW1vdGUuZ2xvYmFsU2hvcnRjdXQudW5yZWdpc3RlckFsbCgpKTtcbiBcbiBcbiBjb25zdCBzaWRlYmFyID0gcmVxdWlyZShcInB5YW5vX2xvY2FsX21vZHVsZXMvc2lkZWJhclwiKTtcbiBzaWRlYmFyLmJ1aWxkKCk7XG4gY29uc3QgUGFnZXMgPSByZXF1aXJlKFwicHlhbm9fbG9jYWxfbW9kdWxlcy9wYWdlcy9wYWdlc1wiKTtcbiBcbiBjb25zdCBsYXN0X3BhZ2UgPSBFU3RvcmUubGFzdF9wYWdlO1xuIGNvbnNvbGUubG9nKCdpbml0LmpzJywgeyBsYXN0X3BhZ2UgfSk7XG4gUGFnZXMudG9QYWdlKGxhc3RfcGFnZSwgZmFsc2UpO1xuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleGl0X2J0bicpXG4gLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgKCkgPT4ge1xuIGxldCB7IHZhbHVlIDogc2hvdWxkRXhpdCB9ID0gYXdhaXQgQWxlcnQuYmlnLndhcm5pbmcoe1xuIHRpdGxlIDogJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBleGl0PycsXG4gY29uZmlybUJ1dHRvbkNvbG9yIDogJyNkYzM1NDUnLFxuIGFuaW1hdGlvbiA6IGZhbHNlXG4gfSk7XG4gaWYgKCBzaG91bGRFeGl0IClcbiBnZXRDdXJyZW50V2luZG93KCkuY2xvc2UoKTtcbiB9KTtcbiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWluaW1pemVfYnRuJylcbiAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiBnZXRDdXJyZW50V2luZG93KCkubWluaW1pemUoKSk7XG4gKi9cbiJdfQ==