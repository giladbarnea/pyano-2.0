"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Util_1 = require("./Util");
exports.githubURL = 'https://tambien.github.io/Piano/Salamander/';
function getReleasesUrl(midi) {
    return `rel${midi - 20}.[mp3|ogg]`;
}
exports.getReleasesUrl = getReleasesUrl;
function getHarmonicsUrl(midi) {
    return `harmS${Util_1.midiToNote(midi).replace('#', 's')}.[mp3|ogg]`;
}
exports.getHarmonicsUrl = getHarmonicsUrl;
function getNotesUrl(midi, vel) {
    return `${Util_1.midiToNote(midi).replace('#', 's')}v${vel}.[mp3|ogg]`;
}
exports.getNotesUrl = getNotesUrl;
exports.velocitiesMap = {
    1: [8],
    2: [6, 12],
    3: [1, 7, 15],
    4: [1, 5, 10, 15],
    5: [1, 4, 8, 12, 16],
    6: [1, 3, 7, 10, 13, 16],
    7: [1, 3, 6, 9, 11, 13, 16],
    8: [1, 3, 5, 7, 9, 11, 13, 16],
    9: [1, 3, 5, 7, 9, 11, 13, 15, 16],
    10: [1, 2, 3, 5, 7, 9, 11, 13, 15, 16],
    11: [1, 2, 3, 5, 7, 9, 11, 13, 14, 15, 16],
    12: [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16],
    13: [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16],
    14: [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16],
    15: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16],
    16: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
};
exports.allNotes = [
    21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54,
    57, 60, 63, 66, 69, 72, 75, 78, 81, 84,
    87, 90, 93, 96, 99, 102, 105, 108
];
function getNotesInRange(min, max) {
    return exports.allNotes.filter(note => min <= note && note <= max);
}
exports.getNotesInRange = getNotesInRange;
const harmonics = [21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87];
function getHarmonicsInRange(min, max) {
    return harmonics.filter(note => min <= note && note <= max);
}
exports.getHarmonicsInRange = getHarmonicsInRange;
function inHarmonicsRange(note) {
    return harmonics[0] <= note && note <= harmonics[harmonics.length - 1];
}
exports.inHarmonicsRange = inHarmonicsRange;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2FsYW1hbmRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNhbGFtYW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBbUM7QUFFdEIsUUFBQSxTQUFTLEdBQUcsNkNBQTZDLENBQUE7QUFFdEUsU0FBZ0IsY0FBYyxDQUFDLElBQVk7SUFDMUMsT0FBTyxNQUFNLElBQUksR0FBRyxFQUFFLFlBQVksQ0FBQTtBQUNuQyxDQUFDO0FBRkQsd0NBRUM7QUFFRCxTQUFnQixlQUFlLENBQUMsSUFBWTtJQUMzQyxPQUFPLFFBQVEsaUJBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxZQUFZLENBQUE7QUFDOUQsQ0FBQztBQUZELDBDQUVDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLElBQVksRUFBRSxHQUFRO0lBQ2pELE9BQU8sR0FBRyxpQkFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLElBQUksR0FBRyxZQUFZLENBQUE7QUFDaEUsQ0FBQztBQUZELGtDQUVDO0FBS1ksUUFBQSxhQUFhLEdBQThCO0lBQ3ZELENBQUMsRUFBRyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsRUFBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDWCxDQUFDLEVBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUNkLENBQUMsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNsQixDQUFDLEVBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3JCLENBQUMsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3pCLENBQUMsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUM1QixDQUFDLEVBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQy9CLENBQUMsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ25DLEVBQUUsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUN2QyxFQUFFLEVBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzNDLEVBQUUsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzlDLEVBQUUsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNsRCxFQUFFLEVBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3JELEVBQUUsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3pELEVBQUUsRUFBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztDQUM1RCxDQUFBO0FBS1ksUUFBQSxRQUFRLEdBQWE7SUFDakMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO0lBQzlDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUc7Q0FBQyxDQUFBO0FBRW5DLFNBQWdCLGVBQWUsQ0FBQyxHQUFXLEVBQUUsR0FBVztJQUN2RCxPQUFPLGdCQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUE7QUFDM0QsQ0FBQztBQUZELDBDQUVDO0FBS0QsTUFBTSxTQUFTLEdBQWEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUE7QUFFeEgsU0FBZ0IsbUJBQW1CLENBQUMsR0FBVyxFQUFFLEdBQVc7SUFDM0QsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUE7QUFDNUQsQ0FBQztBQUZELGtEQUVDO0FBRUQsU0FBZ0IsZ0JBQWdCLENBQUMsSUFBWTtJQUM1QyxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO0FBQ3ZFLENBQUM7QUFGRCw0Q0FFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1pZGlUb05vdGUgfSBmcm9tICcuL1V0aWwnXG5cbmV4cG9ydCBjb25zdCBnaXRodWJVUkwgPSAnaHR0cHM6Ly90YW1iaWVuLmdpdGh1Yi5pby9QaWFuby9TYWxhbWFuZGVyLydcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlbGVhc2VzVXJsKG1pZGk6IG51bWJlcik6IHN0cmluZyB7XG5cdHJldHVybiBgcmVsJHttaWRpIC0gMjB9LlttcDN8b2dnXWBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhhcm1vbmljc1VybChtaWRpOiBudW1iZXIpOiBzdHJpbmcge1xuXHRyZXR1cm4gYGhhcm1TJHttaWRpVG9Ob3RlKG1pZGkpLnJlcGxhY2UoJyMnLCAncycpfS5bbXAzfG9nZ11gXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb3Rlc1VybChtaWRpOiBudW1iZXIsIHZlbDogYW55KTogc3RyaW5nIHtcblx0cmV0dXJuIGAke21pZGlUb05vdGUobWlkaSkucmVwbGFjZSgnIycsICdzJyl9diR7dmVsfS5bbXAzfG9nZ11gXG59XG5cbi8qKlxuICogTWFwcyB2ZWxvY2l0eSBkZXB0aHMgdG8gU2FsYW1hbmRlciB2ZWxvY2l0aWVzXG4gKi9cbmV4cG9ydCBjb25zdCB2ZWxvY2l0aWVzTWFwOiB7IFtzOiBudW1iZXJdOiBudW1iZXJbXSB9ID0ge1xuXHQxIDogWzhdLFxuXHQyIDogWzYsIDEyXSxcblx0MyA6IFsxLCA3LCAxNV0sXG5cdDQgOiBbMSwgNSwgMTAsIDE1XSxcblx0NSA6IFsxLCA0LCA4LCAxMiwgMTZdLFxuXHQ2IDogWzEsIDMsIDcsIDEwLCAxMywgMTZdLFxuXHQ3IDogWzEsIDMsIDYsIDksIDExLCAxMywgMTZdLFxuXHQ4IDogWzEsIDMsIDUsIDcsIDksIDExLCAxMywgMTZdLFxuXHQ5IDogWzEsIDMsIDUsIDcsIDksIDExLCAxMywgMTUsIDE2XSxcblx0MTAgOiBbMSwgMiwgMywgNSwgNywgOSwgMTEsIDEzLCAxNSwgMTZdLFxuXHQxMSA6IFsxLCAyLCAzLCA1LCA3LCA5LCAxMSwgMTMsIDE0LCAxNSwgMTZdLFxuXHQxMiA6IFsxLCAyLCAzLCA0LCA1LCA3LCA5LCAxMSwgMTMsIDE0LCAxNSwgMTZdLFxuXHQxMyA6IFsxLCAyLCAzLCA0LCA1LCA3LCA5LCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2XSxcblx0MTQgOiBbMSwgMiwgMywgNCwgNSwgNiwgNywgOSwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNl0sXG5cdDE1IDogWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2XSxcblx0MTYgOiBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTZdLFxufVxuXG4vKipcbiAqIEFsbCB0aGUgbm90ZXMgb2YgYXVkaW8gc2FtcGxlc1xuICovXG5leHBvcnQgY29uc3QgYWxsTm90ZXM6IG51bWJlcltdID0gW1xuXHQyMSwgMjQsIDI3LCAzMCwgMzMsIDM2LCAzOSwgNDIsIDQ1LCA0OCwgNTEsIDU0LFxuXHQ1NywgNjAsIDYzLCA2NiwgNjksIDcyLCA3NSwgNzgsIDgxLCA4NCxcblx0ODcsIDkwLCA5MywgOTYsIDk5LCAxMDIsIDEwNSwgMTA4XVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm90ZXNJblJhbmdlKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlcltdIHtcblx0cmV0dXJuIGFsbE5vdGVzLmZpbHRlcihub3RlID0+IG1pbiA8PSBub3RlICYmIG5vdGUgPD0gbWF4KVxufVxuXG4vKipcbiAqIEFsbCB0aGUgbm90ZXMgb2YgYXVkaW8gc2FtcGxlc1xuICovXG5jb25zdCBoYXJtb25pY3M6IG51bWJlcltdID0gWzIxLCAyNCwgMjcsIDMwLCAzMywgMzYsIDM5LCA0MiwgNDUsIDQ4LCA1MSwgNTQsIDU3LCA2MCwgNjMsIDY2LCA2OSwgNzIsIDc1LCA3OCwgODEsIDg0LCA4N11cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhhcm1vbmljc0luUmFuZ2UobWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyW10ge1xuXHRyZXR1cm4gaGFybW9uaWNzLmZpbHRlcihub3RlID0+IG1pbiA8PSBub3RlICYmIG5vdGUgPD0gbWF4KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5IYXJtb25pY3NSYW5nZShub3RlOiBudW1iZXIpOiBib29sZWFuIHtcblx0cmV0dXJuIGhhcm1vbmljc1swXSA8PSBub3RlICYmIG5vdGUgPD0gaGFybW9uaWNzW2hhcm1vbmljcy5sZW5ndGggLSAxXVxufVxuIl19