"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Util_1 = require("./Util");
exports.githubURL = 'https://tambien.github.io/Piano/Salamander/';
function getReleasesUrl(midi) {
    return `rel${midi - 20}.[mp3|ogg]`;
}
exports.getReleasesUrl = getReleasesUrl;
function getHarmonicsUrl(midi) {
    return `harmS${Util_1.midiToNote(midi).replace('#', 's')}.[mp3|ogg]`;
}
exports.getHarmonicsUrl = getHarmonicsUrl;
function getNotesUrl(midi, vel) {
    return `${Util_1.midiToNote(midi).replace('#', 's')}v${vel}.[mp3|ogg]`;
}
exports.getNotesUrl = getNotesUrl;
exports.velocitiesMap = {
    1: [8],
    2: [6, 12],
    3: [1, 7, 15],
    4: [1, 5, 10, 15],
    5: [1, 4, 8, 12, 16],
    6: [1, 3, 7, 10, 13, 16],
    7: [1, 3, 6, 9, 11, 13, 16],
    8: [1, 3, 5, 7, 9, 11, 13, 16],
    9: [1, 3, 5, 7, 9, 11, 13, 15, 16],
    10: [1, 2, 3, 5, 7, 9, 11, 13, 15, 16],
    11: [1, 2, 3, 5, 7, 9, 11, 13, 14, 15, 16],
    12: [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16],
    13: [1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16],
    14: [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16],
    15: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16],
    16: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
};
exports.allNotes = [
    21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54,
    57, 60, 63, 66, 69, 72, 75, 78, 81, 84,
    87, 90, 93, 96, 99, 102, 105, 108
];
function getNotesInRange(min, max) {
    return exports.allNotes.filter(note => min <= note && note <= max);
}
exports.getNotesInRange = getNotesInRange;
const harmonics = [21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87];
function getHarmonicsInRange(min, max) {
    return harmonics.filter(note => min <= note && note <= max);
}
exports.getHarmonicsInRange = getHarmonicsInRange;
function inHarmonicsRange(note) {
    return harmonics[0] <= note && note <= harmonics[harmonics.length - 1];
}
exports.inHarmonicsRange = inHarmonicsRange;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2FsYW1hbmRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNhbGFtYW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBaUM7QUFFcEIsUUFBQSxTQUFTLEdBQUcsNkNBQTZDLENBQUM7QUFFdkUsU0FBZ0IsY0FBYyxDQUFDLElBQVk7SUFDdkMsT0FBTyxNQUFNLElBQUksR0FBRyxFQUFFLFlBQVksQ0FBQTtBQUN0QyxDQUFDO0FBRkQsd0NBRUM7QUFFRCxTQUFnQixlQUFlLENBQUMsSUFBWTtJQUN4QyxPQUFPLFFBQVEsaUJBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxZQUFZLENBQUE7QUFDakUsQ0FBQztBQUZELDBDQUVDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLElBQVksRUFBRSxHQUFRO0lBQzlDLE9BQU8sR0FBRyxpQkFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLElBQUksR0FBRyxZQUFZLENBQUE7QUFDbkUsQ0FBQztBQUZELGtDQUVDO0FBS1ksUUFBQSxhQUFhLEdBQThCO0lBQ3BELENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNOLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDVixDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUNiLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNqQixDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3BCLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3hCLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUMzQixDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzlCLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ2xDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUN0QyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQzdDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUNqRCxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3BELEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3hELEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztDQUM5RCxDQUFDO0FBS1csUUFBQSxRQUFRLEdBQWE7SUFDOUIsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO0lBQzlDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUc7Q0FBQyxDQUFDO0FBRXZDLFNBQWdCLGVBQWUsQ0FBQyxHQUFXLEVBQUUsR0FBVztJQUNwRCxPQUFPLGdCQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUE7QUFDOUQsQ0FBQztBQUZELDBDQUVDO0FBS0QsTUFBTSxTQUFTLEdBQWEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFekgsU0FBZ0IsbUJBQW1CLENBQUMsR0FBVyxFQUFFLEdBQVc7SUFDeEQsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUE7QUFDL0QsQ0FBQztBQUZELGtEQUVDO0FBRUQsU0FBZ0IsZ0JBQWdCLENBQUMsSUFBWTtJQUN6QyxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO0FBQzFFLENBQUM7QUFGRCw0Q0FFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7bWlkaVRvTm90ZX0gZnJvbSAnLi9VdGlsJ1xuXG5leHBvcnQgY29uc3QgZ2l0aHViVVJMID0gJ2h0dHBzOi8vdGFtYmllbi5naXRodWIuaW8vUGlhbm8vU2FsYW1hbmRlci8nO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVsZWFzZXNVcmwobWlkaTogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYHJlbCR7bWlkaSAtIDIwfS5bbXAzfG9nZ11gXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIYXJtb25pY3NVcmwobWlkaTogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYGhhcm1TJHttaWRpVG9Ob3RlKG1pZGkpLnJlcGxhY2UoJyMnLCAncycpfS5bbXAzfG9nZ11gXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb3Rlc1VybChtaWRpOiBudW1iZXIsIHZlbDogYW55KTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7bWlkaVRvTm90ZShtaWRpKS5yZXBsYWNlKCcjJywgJ3MnKX12JHt2ZWx9LlttcDN8b2dnXWBcbn1cblxuLyoqXG4gKiBNYXBzIHZlbG9jaXR5IGRlcHRocyB0byBTYWxhbWFuZGVyIHZlbG9jaXRpZXNcbiAqL1xuZXhwb3J0IGNvbnN0IHZlbG9jaXRpZXNNYXA6IHsgW3M6IG51bWJlcl06IG51bWJlcltdIH0gPSB7XG4gICAgMTogWzhdLFxuICAgIDI6IFs2LCAxMl0sXG4gICAgMzogWzEsIDcsIDE1XSxcbiAgICA0OiBbMSwgNSwgMTAsIDE1XSxcbiAgICA1OiBbMSwgNCwgOCwgMTIsIDE2XSxcbiAgICA2OiBbMSwgMywgNywgMTAsIDEzLCAxNl0sXG4gICAgNzogWzEsIDMsIDYsIDksIDExLCAxMywgMTZdLFxuICAgIDg6IFsxLCAzLCA1LCA3LCA5LCAxMSwgMTMsIDE2XSxcbiAgICA5OiBbMSwgMywgNSwgNywgOSwgMTEsIDEzLCAxNSwgMTZdLFxuICAgIDEwOiBbMSwgMiwgMywgNSwgNywgOSwgMTEsIDEzLCAxNSwgMTZdLFxuICAgIDExOiBbMSwgMiwgMywgNSwgNywgOSwgMTEsIDEzLCAxNCwgMTUsIDE2XSxcbiAgICAxMjogWzEsIDIsIDMsIDQsIDUsIDcsIDksIDExLCAxMywgMTQsIDE1LCAxNl0sXG4gICAgMTM6IFsxLCAyLCAzLCA0LCA1LCA3LCA5LCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2XSxcbiAgICAxNDogWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDksIDExLCAxMiwgMTMsIDE0LCAxNSwgMTZdLFxuICAgIDE1OiBbMSwgMiwgMywgNCwgNSwgNiwgNywgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTZdLFxuICAgIDE2OiBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOSwgMTAsIDExLCAxMiwgMTMsIDE0LCAxNSwgMTZdLFxufTtcblxuLyoqXG4gKiBBbGwgdGhlIG5vdGVzIG9mIGF1ZGlvIHNhbXBsZXNcbiAqL1xuZXhwb3J0IGNvbnN0IGFsbE5vdGVzOiBudW1iZXJbXSA9IFtcbiAgICAyMSwgMjQsIDI3LCAzMCwgMzMsIDM2LCAzOSwgNDIsIDQ1LCA0OCwgNTEsIDU0LFxuICAgIDU3LCA2MCwgNjMsIDY2LCA2OSwgNzIsIDc1LCA3OCwgODEsIDg0LFxuICAgIDg3LCA5MCwgOTMsIDk2LCA5OSwgMTAyLCAxMDUsIDEwOF07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb3Rlc0luUmFuZ2UobWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyW10ge1xuICAgIHJldHVybiBhbGxOb3Rlcy5maWx0ZXIobm90ZSA9PiBtaW4gPD0gbm90ZSAmJiBub3RlIDw9IG1heClcbn1cblxuLyoqXG4gKiBBbGwgdGhlIG5vdGVzIG9mIGF1ZGlvIHNhbXBsZXNcbiAqL1xuY29uc3QgaGFybW9uaWNzOiBudW1iZXJbXSA9IFsyMSwgMjQsIDI3LCAzMCwgMzMsIDM2LCAzOSwgNDIsIDQ1LCA0OCwgNTEsIDU0LCA1NywgNjAsIDYzLCA2NiwgNjksIDcyLCA3NSwgNzgsIDgxLCA4NCwgODddO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SGFybW9uaWNzSW5SYW5nZShtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXJbXSB7XG4gICAgcmV0dXJuIGhhcm1vbmljcy5maWx0ZXIobm90ZSA9PiBtaW4gPD0gbm90ZSAmJiBub3RlIDw9IG1heClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluSGFybW9uaWNzUmFuZ2Uobm90ZTogbnVtYmVyKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGhhcm1vbmljc1swXSA8PSBub3RlICYmIG5vdGUgPD0gaGFybW9uaWNzW2hhcm1vbmljcy5sZW5ndGggLSAxXVxufVxuIl19